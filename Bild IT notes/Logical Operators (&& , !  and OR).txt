&&-AND is always executed before ||-OR. Unless there are brackets DUH...


The logical OR expression is evaluated left to right, it is tested for possible "short-circuit" evaluation using the following rule:

(some truthy expression) || expr is short-circuit evaluated to the truthy expression.

Short circuit means that the expr part above is not evaluated, hence any side effects of doing so do not take effect (e.g., 
if expr is a function call, the calling never takes place). This happens because the value of the operator is already determined 
after the evaluation of the first operand. 

See example:

function A(){ console.log('called A'); return false; }
function B(){ console.log('called B'); return true; }

console.log( B() || A() );
// logs "called B" due to the function call,
// then logs true (which is the resulting value of the operator)


the ?? operator called nullish coalescing.

